/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package content_admin;

import inc.config;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.Statement;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author LUKAS PUTRA DIANTAMA
 */
public class Data_karyawan extends javax.swing.JInternalFrame {
    Connection conn = config.Conn();
    Statement st;
    ResultSet rs;
    int idRole,idOutlet;
   
    
      private void tampilData(){
        DefaultTableModel model = new DefaultTableModel();
        model.addColumn("No");
        model.addColumn("ID");
        model.addColumn("Username");
        model.addColumn("Password");
        model.addColumn("Nama Karyawan");
        model.addColumn("Role");
        model.addColumn("Telepon");
        model.addColumn("Outlet (Tempat Bekerja)");
      
        try{
            String sql = "SELECT sys_karyawan.karyawan_id, karyawan_username, sys_password.password_value, karyawan_name, sys_role.role_name, karyawan_phone, sys_outlet.outlet_name FROM sys_karyawan, sys_password, sys_role, sys_outlet WHERE sys_role.role_id= sys_karyawan.karyawan_role_id AND sys_outlet.outlet_id=sys_karyawan.karyawan_outlet_id AND sys_password.password_karyawan_id = sys_karyawan.karyawan_id ORDER BY karyawan_id ASC";
            st = conn.createStatement();
            rs = st.executeQuery(sql);
            
            int no = 0;
            while(rs.next()){
                no++;
                model.addRow(new Object []{
                    //mungkin salah disini
                    no,rs.getString("karyawan_id"), rs.getString("karyawan_username"),rs.getString("password_value"),rs.getString("karyawan_name"),rs.getString("role_name"),rs.getString("karyawan_phone"),rs.getString("outlet_name"),
                });
            }
            tData.setModel(model);
        }catch(Exception e){
            System.out.println(e.getMessage());
        }
    }
    /**
     * Creates new form Data_karyawan
     */
    public Data_karyawan() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        tId = new javax.swing.JTextField();
        tUser = new javax.swing.JTextField();
        tNama = new javax.swing.JTextField();
        tHp = new javax.swing.JTextField();
        cRole = new javax.swing.JComboBox<>();
        cOutlet = new javax.swing.JComboBox<>();
        tTambah = new javax.swing.JButton();
        tUbah = new javax.swing.JButton();
        tHapus = new javax.swing.JButton();
        tReset = new javax.swing.JButton();
        tBatal = new javax.swing.JButton();
        tCari = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tData = new javax.swing.JTable()
        {
            public boolean isCellEditable(int rowIndex, int colIndex)
            {
                return false;
            }
        };
        tPass = new javax.swing.JPasswordField();

        setClosable(true);
        setMaximizable(true);
        setPreferredSize(new java.awt.Dimension(1301, 632));
        addInternalFrameListener(new javax.swing.event.InternalFrameListener() {
            public void internalFrameActivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosed(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosing(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeactivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeiconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameIconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameOpened(javax.swing.event.InternalFrameEvent evt) {
                formInternalFrameOpened(evt);
            }
        });

        jPanel1.setBackground(new java.awt.Color(51, 153, 0));
        jPanel1.setForeground(new java.awt.Color(51, 153, 0));

        jLabel1.setFont(new java.awt.Font("Arial Black", 0, 36)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Data Karyawan");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jLabel1)
                .addGap(0, 85, Short.MAX_VALUE))
        );

        jLabel2.setText("ID");

        jLabel3.setText("Username Karyawan");

        jLabel4.setText("Nama Karyawan");

        jLabel5.setText("Role");

        jLabel6.setText("Nomor Telepon");

        jLabel7.setText("Outlet (Tempat Bekerja)");

        tId.setEditable(false);

        cRole.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Pilih Role Karyawan" }));
        cRole.addPopupMenuListener(new javax.swing.event.PopupMenuListener() {
            public void popupMenuCanceled(javax.swing.event.PopupMenuEvent evt) {
            }
            public void popupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {
                cRolePopupMenuWillBecomeInvisible(evt);
            }
            public void popupMenuWillBecomeVisible(javax.swing.event.PopupMenuEvent evt) {
            }
        });
        cRole.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cRoleActionPerformed(evt);
            }
        });

        cOutlet.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Pilih Outlet" }));
        cOutlet.addPopupMenuListener(new javax.swing.event.PopupMenuListener() {
            public void popupMenuCanceled(javax.swing.event.PopupMenuEvent evt) {
            }
            public void popupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {
                cOutletPopupMenuWillBecomeInvisible(evt);
            }
            public void popupMenuWillBecomeVisible(javax.swing.event.PopupMenuEvent evt) {
            }
        });
        cOutlet.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cOutletActionPerformed(evt);
            }
        });

        tTambah.setText("Tambah");
        tTambah.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tTambahActionPerformed(evt);
            }
        });

        tUbah.setText("Ubah");
        tUbah.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tUbahActionPerformed(evt);
            }
        });

        tHapus.setText("Hapus");
        tHapus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tHapusActionPerformed(evt);
            }
        });

        tReset.setText("Reset");

        tBatal.setText("Batal");
        tBatal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tBatalActionPerformed(evt);
            }
        });

        tCari.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                tCariKeyPressed(evt);
            }
        });

        jLabel8.setText("Pencarian");

        jLabel9.setText("Password");

        tData.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "No", "ID", "Username", "Password", "Nama Karyawan", "Role", "Telepon", "Outlet(Tempat Bekerja)"
            }
        ));
        tData.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tDataMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tData);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addGap(69, 69, 69)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3)
                    .addComponent(jLabel4)
                    .addComponent(jLabel5)
                    .addComponent(jLabel6)
                    .addComponent(jLabel7)
                    .addComponent(tTambah)
                    .addComponent(jLabel9))
                .addGap(87, 87, 87)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(tUbah)
                        .addGap(18, 18, 18)
                        .addComponent(tHapus)
                        .addGap(18, 18, 18)
                        .addComponent(tReset))
                    .addComponent(tId)
                    .addComponent(tUser)
                    .addComponent(tNama)
                    .addComponent(tHp)
                    .addComponent(cRole, 0, 268, Short.MAX_VALUE)
                    .addComponent(cOutlet, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(tPass))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(363, 363, 363)
                        .addComponent(jLabel8)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(tCari, javax.swing.GroupLayout.PREFERRED_SIZE, 179, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(tBatal))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(85, 85, 85)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 599, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(70, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(tId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tBatal)
                    .addComponent(tCari, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(tUser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel9)
                            .addComponent(tPass, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(23, 23, 23)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(tNama, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(20, 20, 20)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(cRole, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(20, 20, 20)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel6)
                            .addComponent(tHp, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel7)
                            .addComponent(cOutlet, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(tUbah)
                            .addComponent(tHapus)
                            .addComponent(tReset)
                            .addComponent(tTambah)))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void tTambahActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tTambahActionPerformed
        // TODO add your handling code here:
       
        String cekUser = tUser.getText();
        String cekNama = tNama.getText();
        String cekHp = tHp.getText();
        int generatedKey = 0;
        
        
        if(cekNama.equals("")&&cekUser.equals("")&&cekNama.equals("")&&cekHp.equals("")){
          JOptionPane.showMessageDialog(null, "Isi Data Terlebih Dahulu!");
          JOptionPane.showMessageDialog(null, "Data Gagal Ditambahkan!");
        } 
        else if(cekNama.equals("")){
            JOptionPane.showMessageDialog(null, "Nama Dokter Tidak Boleh Kosong!");
            JOptionPane.showMessageDialog(null, "Data Gagal Ditambahkan!");
        } else if(cekUser.equals("")){
            JOptionPane.showMessageDialog(null, "Username!");
            JOptionPane.showMessageDialog(null, "Data Gagal Ditambahkan!");
        }else if(cekHp.equals("")){
            JOptionPane.showMessageDialog(null, "Nomor Telepon Tidak Boleh Kosong!");
            JOptionPane.showMessageDialog(null, "Data Gagal Ditambahkan!");
        }else if(cekHp.length()>=12){
            JOptionPane.showMessageDialog(null, "Nomor Telepon Maksimal 12 Digit!");
        }else {
             if(JOptionPane.showConfirmDialog(null, "Anda Yakin Data Yang Anda Tambahkan Sudah Benar?","Menambahkan Data",JOptionPane.YES_NO_OPTION)== JOptionPane.YES_OPTION){
                try{
                  String sql = "INSERT INTO sys_karyawan VALUES (NULL,'"+tUser.getText()+"', '"+tNama.getText()+"','"+idRole+"', '"+tHp.getText()+"', '"+idOutlet+"')";
                 // st = conn.createStatement();
                 // st.executeUpdate(sql);
                 PreparedStatement ps = conn.prepareStatement(sql,Statement.RETURN_GENERATED_KEYS);
                 ps.execute();
                 ResultSet rs = ps.getGeneratedKeys();
                 if(rs.next()){
                    generatedKey = rs.getInt(1);
                 }
               }catch(Exception e){
                   System.out.println(e.getMessage());
               }
              
                try{    
                  System.out.println(tPass.getText());
                  String sql = "INSERT INTO sys_password VALUES (NULL,md5('"+tPass.getText()+"'), '"+generatedKey+"')";
                  st = conn.createStatement();
                  st.executeUpdate(sql);

                  JOptionPane.showMessageDialog(null,"Data Berhasil Disimpan!");
                  clearText();
                  tampilData();

               }catch(Exception e){
                   System.out.println(e.getMessage());
               }
             }else{
                   JOptionPane.showMessageDialog(null,"Data Batal Disimpan!");
             }
        }
    }//GEN-LAST:event_tTambahActionPerformed

     private void clearText(){
        tId.setText("");
        tUser.setText("");
        tPass.setText("");
        tNama.setText("");
        cRole.setSelectedIndex(0);
        cOutlet.setSelectedIndex(0);
        tHp.setText("");
        tId.setEditable(false);
        
    }
    private void formInternalFrameOpened(javax.swing.event.InternalFrameEvent evt) {//GEN-FIRST:event_formInternalFrameOpened
      try{
          tampilData();
          String sql = "SELECT * FROM sys_role";
          conn = config.Conn();
          st = conn.createStatement();
          rs = st.executeQuery(sql);
          
           while(rs.next()){
               cRole.addItem(rs.getString("role_name"));
           }
      }catch(Exception e){
          System.out.println(e.getMessage());
      }  
      //////////////////////////////////////////////
       try{
          String sql = "SELECT * FROM sys_outlet";
          conn = config.Conn();
          st = conn.createStatement();
          rs = st.executeQuery(sql);
          
          
           while(rs.next()){
               cOutlet.addItem(rs.getString("outlet_name"));
           }
      }catch(Exception e){
          System.out.println(e.getMessage());
      } 
    }//GEN-LAST:event_formInternalFrameOpened

    private void cRoleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cRoleActionPerformed
        // TODO add your handling code here:
//         try{
//          String sql = "SELECT * FROM sys_role WHERE role_name = '"+cRole.getSelectedItem()+"'";
//          conn = config.Conn();
//          st = conn.createStatement();
//          rs = st.executeQuery(sql);
//          
//          
//           if(rs.next()){
//               idRole = rs.getInt("role_id");
//           }
//      }catch(Exception e){
//          System.out.println(e.getMessage());
//      } 
        
    }//GEN-LAST:event_cRoleActionPerformed

    private void cOutletActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cOutletActionPerformed
//          try{
//          String sql = "SELECT * FROM sys_outlet WHERE outlet_name = '"+cOutlet.getSelectedItem()+"'";
//          conn = config.Conn();
//          st = conn.createStatement();
//          rs = st.executeQuery(sql);
//          
//          
//           if(rs.next()){
//               idOutlet = rs.getInt("outlet_id");
//           }
//      }catch(Exception e){
//          System.out.println(e.getMessage());
//      } 
    }//GEN-LAST:event_cOutletActionPerformed

    private void cRolePopupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {//GEN-FIRST:event_cRolePopupMenuWillBecomeInvisible
        try{
          String sql = "SELECT * FROM sys_role WHERE role_name = '"+cRole.getSelectedItem()+"'";
          conn = config.Conn();
          st = conn.createStatement();
          rs = st.executeQuery(sql);
          
          
           if(rs.next()){
               idRole = rs.getInt("role_id");
           }
      }catch(Exception e){
          System.out.println(e.getMessage());
      } 
    }//GEN-LAST:event_cRolePopupMenuWillBecomeInvisible

    private void cOutletPopupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {//GEN-FIRST:event_cOutletPopupMenuWillBecomeInvisible
        try{
          String sql = "SELECT * FROM sys_outlet WHERE outlet_name = '"+cOutlet.getSelectedItem()+"'";
          conn = config.Conn();
          st = conn.createStatement();
          rs = st.executeQuery(sql);
          
          
           if(rs.next()){
               idOutlet = rs.getInt("outlet_id");
           }
      }catch(Exception e){
          System.out.println(e.getMessage());
      } 
        
    }//GEN-LAST:event_cOutletPopupMenuWillBecomeInvisible

    private void tDataMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tDataMouseClicked
       int baris = tData.getSelectedRow();
        tId.setText(tData.getModel().getValueAt(baris, 1).toString());
        tUser.setText(tData.getModel().getValueAt(baris, 2).toString());
        tPass.setText(tData.getModel().getValueAt(baris, 3).toString());
        tNama.setText(tData.getModel().getValueAt(baris, 4).toString());
        cRole.setSelectedItem(tData.getModel().getValueAt(baris, 5).toString());
        tHp.setText(tData.getModel().getValueAt(baris, 6).toString());
        cOutlet.setSelectedItem(tData.getModel().getValueAt(baris, 7).toString());
        
    }//GEN-LAST:event_tDataMouseClicked

    private void tUbahActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tUbahActionPerformed
        //amibl id role
         try{
          String sql = "SELECT * FROM sys_role WHERE role_name = '"+cRole.getSelectedItem()+"'";
          conn = config.Conn();
          st = conn.createStatement();
          rs = st.executeQuery(sql);
          
          
           if(rs.next()){
               idRole = rs.getInt("role_id");
           }
        }catch(Exception e){
            System.out.println(e.getMessage());
        } 

        //ambil id outlet
          try{
            String sql = "SELECT * FROM sys_outlet WHERE outlet_name = '"+cOutlet.getSelectedItem()+"'";
            conn = config.Conn();
            st = conn.createStatement();
            rs = st.executeQuery(sql);


             if(rs.next()){
                 idOutlet = rs.getInt("outlet_id");
             }
        }catch(Exception e){
            System.out.println(e.getMessage());
        } 
        //ubah
        String cekUser = tUser.getText();
        String cekNama = tNama.getText();
        String cekHp = tHp.getText();
        int generatedKey = 0;
        
        
        if(cekNama.equals("")&&cekUser.equals("")&&cekNama.equals("")&&cekHp.equals("")){
          JOptionPane.showMessageDialog(null, "Isi Data Terlebih Dahulu!");
          JOptionPane.showMessageDialog(null, "Data Gagal Diubah!");
        } 
        else if(cekNama.equals("")){
            JOptionPane.showMessageDialog(null, "Nama Dokter Tidak Boleh Kosong!");
            JOptionPane.showMessageDialog(null, "Data Gagal Diubah!");
        } else if(cekUser.equals("")){
            JOptionPane.showMessageDialog(null, "Username!");
            JOptionPane.showMessageDialog(null, "Data Gagal Diubah!");
        }else if(cekHp.equals("")){
            JOptionPane.showMessageDialog(null, "Nomor Telepon Tidak Boleh Kosong!");
            JOptionPane.showMessageDialog(null, "Data Gagal Diubah!");
        }else if(cekHp.length()>=12){
            JOptionPane.showMessageDialog(null, "Nomor Telepon Maksimal 12 Digit!");
        }else {
             if(JOptionPane.showConfirmDialog(null, "Anda Yakin Data Yang Anda Tambahkan Sudah Benar?","Mengubah Data",JOptionPane.YES_NO_OPTION)== JOptionPane.YES_OPTION){
                try{
                 String sql = "UPDATE  sys_karyawan SET karyawan_username = '"+tUser.getText()+"', karyawan_name = '"+tNama.getText()+"', karyawan_role_id = '"+idRole+"', karyawan_phone = '"+tHp.getText()+"', karyawan_outlet_id = '"+idOutlet+"' WHERE karyawan_id = '"+tId.getText()+"'";
                 // st = conn.createStatement();
                 // st.executeUpdate(sql);
                 PreparedStatement ps = conn.prepareStatement(sql,Statement.RETURN_GENERATED_KEYS);
                 ps.execute();
                 ResultSet rs = ps.getGeneratedKeys();
                 if(rs.next()){
                    generatedKey = rs.getInt(1);
                 }
               }catch(Exception e){
                   System.out.println(e.getMessage());
               }
              
                try{    
                  String sql = "UPDATE  sys_password SET password_value = md5('"+tPass.getText()+"') WHERE password_karyawan_id = '"+generatedKey+"'";
                  st = conn.createStatement();
                  st.executeUpdate(sql);

                  JOptionPane.showMessageDialog(null,"Data Berhasil Disimpan!");
                  clearText();
                  tampilData();

               }catch(Exception e){
                   System.out.println(e.getMessage());
               }
             }else{
                   JOptionPane.showMessageDialog(null,"Data Batal Disimpan!");
             }
        }
    }//GEN-LAST:event_tUbahActionPerformed

    private void tHapusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tHapusActionPerformed
        String cekId = tId.getText();
        int generatedKey = 0;
        
        if(cekId.equals("")){
            JOptionPane.showMessageDialog(null, "Pilih Data Yang Akan Dihapus Terlebih Dahulu!");
            JOptionPane.showMessageDialog(null, "Data Gagal Dihapus!");
        }else {
            if(JOptionPane.showConfirmDialog(null, "Anda Yakin Menghapus Data Ini?","Menghapus Data",JOptionPane.YES_NO_OPTION)== JOptionPane.YES_OPTION){
                try{
                   String sql = "DELETE FROM sys_karyawan WHERE karyawan_id = '"+tId.getText()+"'";
                   st = conn.createStatement();
                   st.executeUpdate(sql);


                   //JOptionPane.showMessageDialog(null,"Data Berhasil Dihapus!");
                   //clearText();
                   //tampilData();
                 PreparedStatement ps = conn.prepareStatement(sql,Statement.RETURN_GENERATED_KEYS);
                 ps.execute();
                 ResultSet rs = ps.getGeneratedKeys();
                 if(rs.next()){
                    generatedKey = rs.getInt(1);
                 }
                }catch(Exception e){
                    System.out.println(e.getMessage());
                }
                ////////////
                try{
                   String sql = "DELETE FROM sys_password WHERE password_karyawan_id = '"+generatedKey+"'";
                   st = conn.createStatement();
                   st.executeUpdate(sql);


                   JOptionPane.showMessageDialog(null,"Data Berhasil Dihapus!");
                   clearText();
                   tampilData();

                }catch(Exception e){
                    System.out.println(e.getMessage());
                }
            }else{
                   JOptionPane.showMessageDialog(null,"Data Batal Dihapus!");
            }
            
        }
    }//GEN-LAST:event_tHapusActionPerformed

    private void tCariKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tCariKeyPressed
        DefaultTableModel model = new DefaultTableModel();
        model.addColumn("No");
        model.addColumn("ID");
        model.addColumn("Username");
        model.addColumn("Password");
        model.addColumn("Nama Karyawan");
        model.addColumn("Role");
        model.addColumn("Telepon");
        model.addColumn("Outlet (Tempat Bekerja)");
      
        try{
            String sql = "SELECT sys_karyawan.karyawan_id, karyawan_username, sys_password.password_value, karyawan_name, sys_role.role_name, karyawan_phone, sys_outlet.outlet_name FROM sys_karyawan, sys_password, sys_role, sys_outlet WHERE sys_role.role_id= sys_karyawan.karyawan_role_id AND sys_outlet.outlet_id=sys_karyawan.karyawan_outlet_id AND sys_password.password_karyawan_id = sys_karyawan.karyawan_id AND (sys_karyawan.karyawan_username LIKE '%"+tCari.getText()+"%' OR sys_karyawan.karyawan_name LIKE '%"+tCari.getText()+"%' OR sys_role.role_name LIKE '%"+tCari.getText()+"%' OR sys_outlet.outlet_name LIKE '%"+tCari.getText()+"%')ORDER BY karyawan_id ASC";
            st = conn.createStatement();
            rs = st.executeQuery(sql);
            
            int no = 0;
            while(rs.next()){
                no++;
                model.addRow(new Object []{
                    //mungkin salah disini
                    no,rs.getString("karyawan_id"), rs.getString("karyawan_username"),rs.getString("password_value"),rs.getString("karyawan_name"),rs.getString("role_name"),rs.getString("karyawan_phone"),rs.getString("outlet_name"),
                });
            }
            tData.setModel(model);
        }catch(Exception e){
            System.out.println(e.getMessage());
        }
        
    }//GEN-LAST:event_tCariKeyPressed

    private void tBatalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tBatalActionPerformed
          clearTextCari();
    }//GEN-LAST:event_tBatalActionPerformed

      private void clearTextCari(){
        tCari.setText("");
        tampilData();
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> cOutlet;
    private javax.swing.JComboBox<String> cRole;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton tBatal;
    private javax.swing.JTextField tCari;
    private javax.swing.JTable tData;
    private javax.swing.JButton tHapus;
    private javax.swing.JTextField tHp;
    private javax.swing.JTextField tId;
    private javax.swing.JTextField tNama;
    private javax.swing.JPasswordField tPass;
    private javax.swing.JButton tReset;
    private javax.swing.JButton tTambah;
    private javax.swing.JButton tUbah;
    private javax.swing.JTextField tUser;
    // End of variables declaration//GEN-END:variables

    private String Md5(String text) {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }
}
